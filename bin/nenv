#!/usr/bin/env node
const { join, resolve } = require('path')
const { spawn } = require('cross-spawn')
const { watchFile } = require('fs')
const pkg = require('../package.json')
const getConfig = require('../server/config')

if (pkg.peerDependencies) {
  Object.keys(pkg.peerDependencies).forEach(dependency => {
    try {
      require.resolve(dependency)
    } catch (err) {
      console.warn(`The module '${dependency}' was not found. Nenv.js requires that you include it in 'dependencies' of your 'package.json'. To add it, run 'npm install --save ${dependency}'`)
    }
  })
}

const defaultCommand = 'dev'
const commands = new Set([
  'init',
  'build',
  'update',
  defaultCommand
])

let cmd = process.argv[2]
let args = []
let nodeArgs = []

if (new Set(['--version', '-v']).has(cmd)) {
  console.log(`nenv.js v${pkg.version}`)
  process.exit(0)
}

if (new Set(process.argv).has('--inspect')) {
  nodeArgs.push('--inspect')
}

if (new Set(['--help', '-h']).has(cmd)) {
  console.log(`
    Usage
      $ nenv <command>
    Available commands
      ${Array.from(commands).join(', ')}

    For more information run a command with the --help flag
    $ nenv <command> --help
  `)
  process.exit(0)
}

if (commands.has(cmd)) {
  args = process.argv.slice(3)
} else {
  cmd = defaultCommand
  args = process.argv.slice(2)
}

const defaultEnv = cmd === 'dev' ? 'development' : 'production'
process.env.NODE_ENV = process.env.NODE_ENV || defaultEnv

const bin = join(__dirname, 'nenv-' + cmd)

const startProcess = () => {
  const proc = spawn('node', [...nodeArgs, ...[bin], ...args], {stdio: 'inherit', customFds: [0, 1, 2]})
  proc.on('close', (code, signal) => {
    if (code !== null) {
      process.exit(code)
    }

    if (signal) {
      if (signal === 'SIGKILL') {
        process.exit(137)
      }
      console.log(`got signal ${signal}, exiting`)
      process.exit(0)
    }
  })

  proc.on('error', (err) => {
    console.error(err)
    process.exit(1)
  })
  return proc
}

let proc = startProcess()
const { pagesDirectory = resolve(process.cwd(), 'pages') } = getConfig(process.cwd())

if (cmd === 'dev') {
  watchFile(`${resolve(pagesDirectory, '..')}/nenv.config.js`, (cur, prev) => {
    if (cur.size > 0 || prev.size > 0) {
      console.log(`\n> Found a change in nenv.config.js, restarting the server...`)
      // Don't listen to 'close' now since otherwise parent gets killed by listener
      proc.removeAllListeners('close')
      proc.kill()
      proc = startProcess()
    }
  })
}
